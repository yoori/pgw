#include <iostream>
#include <Diameter/Packet.hpp>

unsigned char BUF[] = {
  0x01, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xd1,
  0x00, 0x00, 0x0a, 0xd1, 0x00, 0x00, 0x01, 0x08, 0x40, 0x00, 0x00, 0x14, 0x6c, 0x61, 0x62, 0x2e,
  0x73, 0x64, 0x6d, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x01, 0x28, 0x40, 0x00, 0x00, 0x10,
  0x73, 0x64, 0x6d, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x01, 0x0c, 0x40, 0x00, 0x00, 0x0c,
  0x00, 0x00, 0x13, 0x92, 0x00, 0x00, 0x01, 0x19, 0x00, 0x00, 0x00, 0x26, 0x44, 0x49, 0x41, 0x4d,
  0x45, 0x54, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x41,
  0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x00
};

int main()
{
  std::cout << "BUF.size = " << sizeof(BUF) << std::endl;
  ByteArray buf(BUF, sizeof(BUF));
  Diameter::Packet packet(buf);
  return 0;
}
